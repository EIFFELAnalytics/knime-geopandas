<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="Spatial Join__3756227023415887580.xml">
<entry key="category" type="xstring" value="Data manipulation"/>
<entry key="title" type="xstring" value="Spatial Join"/>
<entry key="description" type="xstring" value=""/>
<entry key="sourcecode" type="xstring" value="# SPATIAL JOIN NODE%%00010import geopandas as gpd%%00010import pandas as pd%%00010from shapely import wkt as WKT%%00010%%00010# Convert geopandas (with geometry column) to pandas (with wkt column)%%00010def gdf_to_df(gdf, **kwargs):%%00010    df = pd.DataFrame(gdf, copy=True)%%00010    df['wkt'] = gdf.geometry.apply(%%00010        lambda wkt: WKT.dumps(wkt, trim=True, rounding_precision=kwargs.get('rounding_precision', -1))%%00010    )%%00010    df.drop(columns='geometry', inplace=True)%%00010    return df%%00010%%00010# Convent pandas (with wkt column) to geopandas (with geometry column)%%00010def df_to_gdf(df):%%00010    gdf = gpd.GeoDataFrame(df, copy=True)%%00010    gdf['geometry'] = df.wkt.apply(WKT.loads)%%00010    gdf.drop(columns='wkt', inplace=True)%%00010    return gdf%%00010%%00010# Read input%%00010gdf1 = df_to_gdf(input_table_1)%%00010gdf2 = df_to_gdf(input_table_2)%%00010%%00010# Spatial join. Choose the operation (“intersects”, “within” or “contains”) and join type.%%00010# See http://geopandas.org/mergingdata.html#spatial-joins%%00010# `gdf` takes the geometry column of `gdf1`.%%00010gdf = gpd.sjoin(gdf1, gdf2, op='within', how='inner')%%00010%%00010# Output%%00010output_table = gdf_to_df(gdf)"/>
</config>
